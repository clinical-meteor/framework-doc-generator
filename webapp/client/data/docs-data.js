// This file is automatically generated by meteor-jsdoc. Regenerate it with 'meteor-jsdoc build'
DocsData = {
  "ActiveLayout.getAppTitle": {
    "examples": [
      "```html\nActiveLayout.getPageWidth();\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-active-layout/lib/ActiveLayout.js",
    "kind": "member",
    "lineno": 23,
    "locus": "Client",
    "longname": "ActiveLayout.getAppTitle",
    "memberof": "ActiveLayout",
    "name": "getAppTitle",
    "returns": [
      {
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Get the application title.",
    "version": "1.2.3"
  },
  "ActiveLayout.getPageWidth": {
    "examples": [
      "```html\nActiveLayout.getPageWidth();\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-active-layout/lib/ActiveLayout.js",
    "kind": "member",
    "lineno": 3,
    "locus": "Client",
    "longname": "ActiveLayout.getPageWidth",
    "memberof": "ActiveLayout",
    "name": "getPageWidth",
    "returns": [
      {
        "type": {
          "names": [
            "StyleString"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Get the application page width.",
    "version": "1.2.3"
  },
  "ActiveLayout.{{getAppTitle}}": {
    "examples": [
      "```html\n<h1>{{getAppTitle}}</h1>\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-active-layout/client/template.helpers.js",
    "kind": "member",
    "lineno": 2,
    "locus": "Client, Blaze Template",
    "longname": "ActiveLayout.{{getAppTitle}}",
    "memberof": "ActiveLayout",
    "name": "{{getAppTitle}}",
    "returns": [
      {
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Get the application title.",
    "version": "1.2.3"
  },
  "ActiveLayout.{{getConnection}}": {
    "examples": [
      "```html\n<div>{{getStatusLabelText}}</div>\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-active-layout/client/template.helpers.js",
    "kind": "member",
    "lineno": 41,
    "link": "The quick brown fox.",
    "locus": "Client, Blaze Template",
    "longname": "ActiveLayout.{{getConnection}}",
    "memberof": "ActiveLayout",
    "name": "{{getConnection}}",
    "returns": [
      {
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Display the connection status of the Meteor app.",
    "version": "1.2.3"
  },
  "ActiveLayout.{{getCreatedAt}}": {
    "examples": [
      "```html\n<div>{{getCreatedAt}}</div>\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-active-layout/client/template.helpers.js",
    "kind": "member",
    "lineno": 154,
    "locus": "Client, Blaze Template",
    "longname": "ActiveLayout.{{getCreatedAt}}",
    "memberof": "ActiveLayout",
    "name": "{{getCreatedAt}}",
    "returns": [
      {
        "type": {
          "names": [
            "DateString"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Gets the timestamp of when the record was created, returned as a text string.",
    "version": "1.2.3"
  },
  "ActiveLayout.{{getNavWidth}}": {
    "examples": [
      "```html\n<nav style=\"{{getNavWidth}}\"></nav>\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-active-layout/client/template.helpers.js",
    "kind": "member",
    "lineno": 20,
    "locus": "Client, Blaze Template",
    "longname": "ActiveLayout.{{getNavWidth}}",
    "memberof": "ActiveLayout",
    "name": "{{getNavWidth}}",
    "returns": [
      {
        "type": {
          "names": [
            "Style"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Get the calculated width of the navbar.",
    "version": "1.2.3"
  },
  "ActiveLayout.{{getStatusLabelColor}}": {
    "examples": [
      "```html\n<div>{{getStatusLabelText}}</div>\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-active-layout/client/template.helpers.js",
    "kind": "member",
    "lineno": 64,
    "locus": "Client, Blaze Template",
    "longname": "ActiveLayout.{{getStatusLabelColor}}",
    "memberof": "ActiveLayout",
    "name": "{{getStatusLabelColor}}",
    "returns": [
      {
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "scope": "static",
    "see": [
      "'foo'"
    ],
    "since": "1.2.3",
    "summary": "Returns a color, based on the connection status of the Meteor app.",
    "todo:": "Upgrade from {String} to {Hex}",
    "version": "1.2.3"
  },
  "ActiveLayout.{{isAdmin}}": {
    "examples": [
      "```html\n{{#if isAdmin}}<div><!-- privat content --></div>{{/if}}\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-active-layout/client/template.helpers.js",
    "kind": "member",
    "lineno": 88,
    "locus": "Client, Blaze Template",
    "longname": "ActiveLayout.{{isAdmin}}",
    "memberof": "ActiveLayout",
    "name": "{{isAdmin}}",
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Checks the Roles package to see if user is an Admin.",
    "version": "1.2.3"
  },
  "ActiveLayout.{{isLoggedIn}}": {
    "examples": [
      "```html\n{{#if isRole 'secretary'}}<div><!-- secretary content --></div>{{/if}}\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-active-layout/client/template.helpers.js",
    "kind": "member",
    "lineno": 170,
    "locus": "Client, Blaze Template",
    "longname": "ActiveLayout.{{isLoggedIn}}",
    "memberof": "ActiveLayout",
    "name": "{{isLoggedIn}}",
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Syntactic sugar for determining if the user is logged in.",
    "version": "1.2.3"
  },
  "ActiveLayout.{{isRole}}": {
    "examples": [
      "```html\n{{#if isRole 'secretary'}}<div><!-- secretary content --></div>{{/if}}\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-active-layout/client/template.helpers.js",
    "kind": "member",
    "lineno": 123,
    "locus": "Client, Blaze Template",
    "longname": "ActiveLayout.{{isRole}}",
    "memberof": "ActiveLayout",
    "name": "{{isRole}}",
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Checks that the user has the specified type of role.",
    "version": "1.2.3"
  },
  "ActiveRecord.ActiveRecord": {
    "examples": [
      "```html\nActiveLayout.getPageWidth();\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-active-record/lib/ActiveRecord.js",
    "kind": "class",
    "lineno": 10,
    "locus": "Client",
    "longname": "ActiveRecord.ActiveRecord",
    "memberof": "ActiveRecord",
    "name": "ActiveRecord",
    "params": [],
    "scope": "static",
    "summary": "An active-record object.",
    "version": "1.2.3"
  },
  "Collaboration.addAdministrator": {
    "examples": [
      "```js\nvar collaboration = Collaborations.findOne({_id: \"ucsc\"});\ncollaboration.addAdministrator('janedoe@test.org');\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-collaborations/lib/object.collaboration.js",
    "kind": "member",
    "lineno": 158,
    "locus": "Anywhere",
    "longname": "Collaboration.addAdministrator",
    "memberof": "Collaboration",
    "name": "addAdministrator",
    "scope": "static",
    "summary": "Adds an administrator to the Collaboration.",
    "version": "1.2.3"
  },
  "Collaboration.addAdministrators": {
    "examples": [
      "```js\nvar collaboration = Collaborations.findOne({_id: \"ucsc\"});\ncollaboration.addAdministrators('janedoe@test.org, johndoe@someplace.org');\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-collaborations/lib/object.collaboration.js",
    "kind": "member",
    "lineno": 174,
    "locus": "Anywhere",
    "longname": "Collaboration.addAdministrators",
    "memberof": "Collaboration",
    "name": "addAdministrators",
    "scope": "static",
    "summary": "Adds an administrator to the Collaboration.",
    "version": "1.2.3"
  },
  "Collaboration.addCollaborator": {
    "examples": [
      "```js\nvar collaboration = Collaborations.findOne({_id: \"ucsc\"});\ncollaboration.addCollaborator('janedoe@test.org');\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-collaborations/lib/object.collaboration.js",
    "kind": "member",
    "lineno": 119,
    "locus": "Anywhere",
    "longname": "Collaboration.addCollaborator",
    "memberof": "Collaboration",
    "name": "addCollaborator",
    "scope": "static",
    "summary": "Adds a collaborator to the Collaboration.",
    "version": "1.2.3"
  },
  "Collaboration.addCollaborators": {
    "examples": [
      "```js\nvar collaboration = Collaborations.findOne({_id: \"ucsc\"});\ncollaboration.addCollaborators('janedoe@test.org, johndoe@someplace.org');\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-collaborations/lib/object.collaboration.js",
    "kind": "member",
    "lineno": 137,
    "locus": "Anywhere",
    "longname": "Collaboration.addCollaborators",
    "memberof": "Collaboration",
    "name": "addCollaborators",
    "scope": "static",
    "summary": "Adds a collaborator to the Collaboration.",
    "version": "1.2.3"
  },
  "Collaboration.getAssociatedCollaborations": {
    "examples": [
      "```js\nCollaborations.findOne({_id: \"ucsc\"}).getAssociatedCollaborations()\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-collaborations/lib/object.collaboration.js",
    "kind": "member",
    "lineno": 541,
    "locus": "Server",
    "longname": "Collaboration.getAssociatedCollaborations",
    "memberof": "Collaboration",
    "name": "getAssociatedCollaborations",
    "returns": [
      {
        "type": {
          "names": [
            "Array"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Returns the other collaborations this collaboration is linked to.",
    "version": "1.2.3"
  },
  "Collaboration.getAssociatedCollaborators": {
    "examples": [
      "```js\nCollaborations.findOne({_id: \"ucsc\"}).getAssociatedCollaborators()\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-collaborations/lib/object.collaboration.js",
    "kind": "member",
    "lineno": 471,
    "locus": "Server",
    "longname": "Collaboration.getAssociatedCollaborators",
    "memberof": "Collaboration",
    "name": "getAssociatedCollaborators",
    "returns": [
      {
        "type": {
          "names": [
            "Array"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Returns the collaborators of the other collaborations this collaboration is linked to.",
    "version": "1.2.3"
  },
  "Collaboration.getCollaborators": {
    "examples": [
      "```\nvar collaboration = Collaborations.findOne({_id: \"ucsc\"});\ncollaboration.getNames('janedoe@test.org')\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-collaborations/lib/object.collaboration.js",
    "kind": "function",
    "lineno": 454,
    "locus": "Anywhere",
    "longname": "Collaboration.getCollaborators",
    "memberof": "Collaboration",
    "name": "getCollaborators",
    "params": [],
    "scope": "static",
    "since": "clinical:METEOR@1.1.3",
    "summary": "Return the collaborators attached to the current Collaboration as an array."
  },
  "Collaboration.getCollaboratorsGraph": {
    "examples": [
      "```\nvar collaboration = Collaborations.findOne({_id: \"ucsc\"});\ncollaboration.getCollaboratorsGraph();\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-collaborations/lib/object.collaboration.js",
    "kind": "function",
    "lineno": 326,
    "locus": "Anywhere",
    "longname": "Collaboration.getCollaboratorsGraph",
    "memberof": "Collaboration",
    "name": "getCollaboratorsGraph",
    "params": [],
    "scope": "static",
    "since": "clinical:METEOR@1.1.3",
    "summary": "Return the collaborators graph associated with the Collaboration."
  },
  "Collaboration.getExtendedGraph": {
    "examples": [
      "```\nvar collaboration = Collaborations.findOne({_id: \"ucsc\"});\ncollaboration.getNames('janedoe@test.org')\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-collaborations/lib/object.collaboration.js",
    "kind": "function",
    "lineno": 394,
    "locus": "Anywhere",
    "longname": "Collaboration.getExtendedGraph",
    "memberof": "Collaboration",
    "name": "getExtendedGraph",
    "params": [],
    "scope": "static",
    "since": "clinical:METEOR@1.1.3",
    "summary": "Return the collaborators attached to the current Collaboration as an array."
  },
  "Collaboration.getNames": {
    "deprecated": true,
    "examples": [
      "```js\nvar collaboration = Collaborations.findOne({_id: \"ucsc\"});\ncollaboration.getNames('janedoe@test.org')\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-collaborations/lib/object.collaboration.js",
    "kind": "member",
    "lineno": 263,
    "locus": "Client",
    "longname": "Collaboration.getNames",
    "memberof": "Collaboration",
    "name": "getNames",
    "scope": "static",
    "summary": "Gets the names of all the",
    "version": "1.2.3"
  },
  "Collaboration.getSelected": {
    "examples": [
      "```js\nvar collaboration = Collaborations.findOne({_id: \"ucsc\"});\ncollaboration.getSelected()\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-collaborations/lib/object.collaboration.js",
    "kind": "member",
    "lineno": 57,
    "locus": "Anywhere",
    "longname": "Collaboration.getSelected",
    "memberof": "Collaboration",
    "name": "getSelected",
    "scope": "static",
    "summary": "Scans the DOM and picks up selected values.",
    "version": "1.2.3"
  },
  "Collaboration.getUrl": {
    "deprecated": true,
    "examples": [
      "```js\nvar collaboration = Collaborations.findOne({_id: \"ucsc\"});\ncollaboration.getUrl(collaborationName)\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-collaborations/lib/object.collaboration.js",
    "kind": "member",
    "lineno": 81,
    "locus": "Anywhere",
    "longname": "Collaboration.getUrl",
    "memberof": "Collaboration",
    "name": "getUrl",
    "scope": "static",
    "summary": "Returns a relative url where a user can get details of the collaboration.",
    "version": "1.2.3"
  },
  "Collaboration.hasApplied": {
    "examples": [
      "```js\nvar collaboration = Collaborations.findOne({_id: \"ucsc\"});\nif (collaboration.hasApplied('janedoe@test.org')){\n  // do stuff\n}\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-collaborations/lib/object.collaboration.js",
    "kind": "member",
    "lineno": 236,
    "locus": "Anywhere",
    "longname": "Collaboration.hasApplied",
    "memberof": "Collaboration",
    "name": "hasApplied",
    "scope": "static",
    "summary": "Determines if user has applied to the Collaboration and is waiting in the requests queue.",
    "version": "1.2.3"
  },
  "Collaboration.hasMember": {
    "examples": [
      "```js\nvar collaboration = Collaborations.findOne({_id: \"ucsc\"});\nif (collaboration.hasMember('janedoe@test.org')){\n  // do stuff\n}\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-collaborations/lib/object.collaboration.js",
    "kind": "member",
    "lineno": 210,
    "locus": "Anywhere",
    "longname": "Collaboration.hasMember",
    "memberof": "Collaboration",
    "name": "hasMember",
    "scope": "static",
    "summary": "Checks if a Collaboration has a particular email address as a collaborator or administrator.",
    "version": "1.2.3"
  },
  "Collaboration.parse": {
    "examples": [
      "```js\nvar collaboration = Collaborations.findOne({_id: \"ucsc\"});\ncollaboration.parse()\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-collaborations/lib/object.collaboration.js",
    "kind": "member",
    "lineno": 36,
    "locus": "Anywhere",
    "longname": "Collaboration.parse",
    "memberof": "Collaboration",
    "name": "parse",
    "scope": "static",
    "summary": "Creates a new collaboration.",
    "version": "1.2.3"
  },
  "Collaboration.removeAdministrator": {
    "examples": [
      "```js\nvar collaboration = Collaborations.findOne({_id: \"ucsc\"});\ncollaboration.removeAdministrator('janedoe@test.org');\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-collaborations/lib/object.collaboration.js",
    "kind": "member",
    "lineno": 194,
    "locus": "Anywhere",
    "longname": "Collaboration.removeAdministrator",
    "memberof": "Collaboration",
    "name": "removeAdministrator",
    "scope": "static",
    "summary": "Removes an administrator from the Collaboration.",
    "version": "1.2.3"
  },
  "Collaboration.removeCollaborator": {
    "examples": [
      "```js\nvar collaboration = Collaborations.findOne({_id: \"ucsc\"});\ncollaboration.removeCollaborator('janedoe@test.org');\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-collaborations/lib/object.collaboration.js",
    "kind": "member",
    "lineno": 102,
    "locus": "Anywhere",
    "longname": "Collaboration.removeCollaborator",
    "memberof": "Collaboration",
    "name": "removeCollaborator",
    "scope": "static",
    "summary": "Removes the specified collaborator from the Collaboration.",
    "version": "1.2.3"
  },
  "Collaboration.save": {
    "examples": [
      "```js\nvar collaboration = Collaborations.findOne({_id: \"ucsc\"});\ncollaboration.addCollaborator(\"janedoe@test.org\");\ncollaboration.save()\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-collaborations/lib/object.collaboration.js",
    "kind": "member",
    "lineno": 17,
    "locus": "Anywhere",
    "longname": "Collaboration.save",
    "memberof": "Collaboration",
    "name": "save",
    "scope": "static",
    "summary": "Save the collaboration object to the database.",
    "version": "1.2.3"
  },
  "Collaborations.Collaborations": {
    "examples": [
      "```js\nCollaborations = new Meteor.Collection(\"collaborations\");\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-collaborations/lib/collection.collaborations.js",
    "kind": "class",
    "lineno": 15,
    "locus": "Anywhere",
    "longname": "Collaborations.Collaborations",
    "memberof": "Collaborations",
    "name": "Collaborations",
    "params": [],
    "scope": "static",
    "summary": "Collaborations object defines a Cursor of collaboration records.",
    "version": "1.2.3"
  },
  "Collaborations.create": {
    "examples": [
      "```js\nCollaborations.create({\n      name: \"SampleCollab\",\n      description: \"Lorem ipsum...\",\n      isUnlisted: false,\n      requiresAdministratorApproval: false,\n      collaborators: ['janedoe@test.org'],\n      administrators: ['janedoe@test.org'],\n      invitations: [],\n      requests: []\n    })\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-collaborations/lib/collection.collaborations.js",
    "kind": "member",
    "lineno": 113,
    "locus": "Anywhere",
    "longname": "Collaborations.create",
    "memberof": "Collaborations",
    "name": "create",
    "scope": "static",
    "summary": "Creates a new collaboration.",
    "version": "1.2.3"
  },
  "Entry.{{logoIsDisplayed}}": {
    "examples": [
      "```html\n{{#if logoIsDisplayed}}\n   <div class=\"entryLogo\" style=\"background-image: url('{{logoUrl}}')\"></div>\n{{/if}}\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-active-entry/components/entryPages.js",
    "kind": "member",
    "lineno": 2,
    "locus": "Client",
    "longname": "Entry.{{logoIsDisplayed}}",
    "memberof": "Entry",
    "name": "{{logoIsDisplayed}}",
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Determines if a block of code should be displayed based on whether the logo is set to be displayed.",
    "version": "1.2.3"
  },
  "Entry.{{logoUrl}}": {
    "examples": [
      "```html\n{{#if logoIsDisplayed}}\n   <div class=\"entryLogo\" style=\"background-image: url('{{logoUrl}}')\"></div>\n{{/if}}\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-active-entry/components/entryPages.js",
    "kind": "member",
    "lineno": 26,
    "locus": "Client",
    "longname": "Entry.{{logoUrl}}",
    "memberof": "Entry",
    "name": "{{logoUrl}}",
    "returns": [
      {
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Retruns the Url of the logo asset.",
    "version": "1.2.3"
  },
  "Env.allow": {
    "examples": [
      "```js\nEnv.allow({\n  DEBUG: true,\n  NODE_ENV: true\n}});\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-env/lib/clinical-env-server.js",
    "kind": "member",
    "lineno": 74,
    "locus": "Server",
    "longname": "Env.allow",
    "memberof": "Env",
    "name": "allow",
    "scope": "static",
    "summary": "Exposes server environment variables on the client.",
    "version": "1.2.3"
  },
  "Env.variable": {
    "examples": [
      "```js\nif(Env.variable('DEBUG')){\n  console.log('debug message');\n}\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-env/lib/clinical-env-client.js",
    "kind": "member",
    "lineno": 11,
    "locus": "Client",
    "longname": "Env.variable",
    "memberof": "Env",
    "name": "variable",
    "scope": "static",
    "summary": "Detects if a specific environment variable was exposed from the server.",
    "version": "1.2.3"
  },
  "FormBuilder..buildForm()": {
    "examples": [
      "```js\nclient.a().b().c().buildForm().end();\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-form-builder/client/components/builderPage/.tests/buildForm.js",
    "kind": "member",
    "lineno": 1,
    "locus": "Testing",
    "longname": "FormBuilder..buildForm()",
    "memberof": "FormBuilder.",
    "name": "buildForm()",
    "scope": "static",
    "summary": "Configure the global Theme object for the application.",
    "version": "1.2.3"
  },
  "FormBuilder.add": {
    "deprecated": true,
    "filepath": "https://github.com/clinical-meteor//packages/clinical-form-builder/lib/FormBuilder.js",
    "kind": "member",
    "lineno": 2,
    "locus": "Client",
    "longname": "FormBuilder.add",
    "memberof": "FormBuilder",
    "name": "add",
    "params": [
      {
        "name": "blockType"
      },
      {
        "name": "question"
      }
    ],
    "scope": "static",
    "summary": "Adds a section block to a form schema currently being built."
  },
  "FormBuilder.addQuestion": {
    "filepath": "https://github.com/clinical-meteor//packages/clinical-form-builder/lib/FormBuilder.js",
    "kind": "member",
    "lineno": 17,
    "locus": "Client",
    "longname": "FormBuilder.addQuestion",
    "memberof": "FormBuilder",
    "name": "addQuestion",
    "params": [
      {
        "name": "question"
      }
    ],
    "scope": "static",
    "summary": "Adds a section block to a form schema currently being built."
  },
  "FormBuilder.save": {
    "filepath": "https://github.com/clinical-meteor//packages/clinical-form-builder/lib/FormBuilder.js",
    "kind": "member",
    "lineno": 200,
    "locus": "Client",
    "longname": "FormBuilder.save",
    "memberof": "FormBuilder",
    "name": "save",
    "params": [
      {
        "name": "question"
      }
    ],
    "scope": "static",
    "summary": "Save a form to the metadata collection."
  },
  "HipaaLogger.logEvent": {
    "examples": [
      "```js\nvar hipaaEvent = {\n  eventType: \"modified\",\n  userId: Meteor.userId(),\n  userName: Meteor.user().profile.fullName,\n  collectionName: \"Medications\",\n  recordId: Random.id(),\n  patientId: Session.get('currentPatientId'),\n  patientName: Session.get('currentPatientName')\n};\nHipaaLogger.logEvent(hipaaEvent);\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-hipaa-audit-log/lib/HipaaLogger.js",
    "kind": "member",
    "lineno": 17,
    "locus": "Client",
    "longname": "HipaaLogger.logEvent",
    "memberof": "HipaaLogger",
    "name": "logEvent",
    "params": [
      {
        "name": "hipaaEvent.eventType"
      },
      {
        "name": "hipaaEvent.userId"
      },
      {
        "name": "hipaaEvent.userName"
      },
      {
        "name": "hipaaEvent.collectionName"
      },
      {
        "name": "hipaaEvent.recordId"
      },
      {
        "name": "hipaaEvent.patientId"
      },
      {
        "name": "hipaaEvent.patientName"
      },
      {
        "name": "hipaaEvent.message"
      }
    ],
    "scope": "static",
    "summary": "Detects if a specific environment variable was exposed from the server.",
    "version": "1.2.3"
  },
  "Mongo.Collection.drop": {
    "examples": [
      "```js\n  todos = new Mongo('todos');\n  todo.insert({name: \"Butter\"})\n  todo.insert({name: \"Eggs\"})\n  todo.insert({name: \"Kale\"})\n  todos.drop();\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-extended-api/server/collection-extended-api.js",
    "kind": "member",
    "lineno": 1,
    "locus": "Server",
    "longname": "Mongo.Collection.drop",
    "memberof": "Mongo.Collection",
    "name": "drop",
    "scope": "static",
    "summary": "Toggles a boolean session variable true/false.",
    "version": "1.2.3"
  },
  "Roles.addUsersToRoles": {
    "examples": [
      "Roles.addUsersToRoles(userId, 'admin')\n    Roles.addUsersToRoles(userId, ['view-secrets'], 'example.com')\n    Roles.addUsersToRoles([user1, user2], ['user','editor'])\n    Roles.addUsersToRoles([user1, user2], ['glorious-admin', 'perform-action'], 'example.org')\n    Roles.addUsersToRoles(userId, 'admin', Roles.GLOBAL_GROUP)"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-roles/lib/roles_common.js",
    "kind": "function",
    "lineno": 114,
    "longname": "Roles.addUsersToRoles",
    "memberof": "Roles",
    "name": "addUsersToRoles",
    "params": [
      {
        "description": "<p>User id(s) or object(s) with an _id field</p>",
        "name": "users",
        "type": {
          "names": [
            "Array",
            "String"
          ]
        }
      },
      {
        "description": "<p>Name(s) of roles/permissions to add users to</p>",
        "name": "roles",
        "type": {
          "names": [
            "Array",
            "String"
          ]
        }
      },
      {
        "description": "<p>Optional group name. If supplied, roles will be\n                        specific to that group.\n                        Group names can not start with a '$' or contain\n                        null characters.  Periods in names '.' are\n                        automatically converted to underscores.\n                        The special group Roles.GLOBAL_GROUP provides\n                        a convenient way to assign blanket roles/permissions\n                        across all groups.  The roles/permissions in the\n                        Roles.GLOBAL_GROUP group will be automatically\n                        included in checks for any group.</p>",
        "name": "group",
        "optional": true,
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Add users to roles. Will create roles as needed.\n\nNOTE: Mixing grouped and non-grouped roles for the same user\n      is not supported and will throw an error.\n\nMakes 2 calls to database:\n 1. retrieve list of all existing roles\n 2. update users' roles"
  },
  "Roles.createRole": {
    "filepath": "https://github.com/clinical-meteor//packages/clinical-roles/lib/roles_common.js",
    "kind": "function",
    "lineno": 55,
    "longname": "Roles.createRole",
    "memberof": "Roles",
    "name": "createRole",
    "params": [
      {
        "description": "<p>Name of role</p>",
        "name": "role",
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "returns": [
      {
        "description": "<p>id of new role</p>",
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Create a new role. Whitespace will be trimmed."
  },
  "Roles.deleteRole": {
    "filepath": "https://github.com/clinical-meteor//packages/clinical-roles/lib/roles_common.js",
    "kind": "function",
    "lineno": 89,
    "longname": "Roles.deleteRole",
    "memberof": "Roles",
    "name": "deleteRole",
    "params": [
      {
        "description": "<p>Name of role</p>",
        "name": "role",
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Delete an existing role.  Will throw \"Role in use\" error if any users\nare currently assigned to the target role."
  },
  "Roles.getAllRoles": {
    "filepath": "https://github.com/clinical-meteor//packages/clinical-roles/lib/roles_common.js",
    "kind": "function",
    "lineno": 415,
    "longname": "Roles.getAllRoles",
    "memberof": "Roles",
    "name": "getAllRoles",
    "params": [],
    "returns": [
      {
        "description": "<p>cursor of existing roles</p>",
        "type": {
          "names": [
            "Cursor"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Retrieve set of all existing roles"
  },
  "Roles.getGroupsForUser": {
    "filepath": "https://github.com/clinical-meteor//packages/clinical-roles/lib/roles_common.js",
    "kind": "function",
    "lineno": 494,
    "longname": "Roles.getGroupsForUser",
    "memberof": "Roles",
    "name": "getGroupsForUser",
    "params": [
      {
        "description": "<p>User Id or actual user object</p>",
        "name": "user",
        "type": {
          "names": [
            "String",
            "Object"
          ]
        }
      },
      {
        "description": "<p>Optional name of roles to restrict groups to.</p>",
        "name": "role",
        "optional": true,
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "returns": [
      {
        "description": "<p>Array of user's groups, unsorted. Roles.GLOBAL_GROUP will be omitted</p>",
        "type": {
          "names": [
            "Array"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Retrieve users groups, if any"
  },
  "Roles.getRolesForUser": {
    "filepath": "https://github.com/clinical-meteor//packages/clinical-roles/lib/roles_common.js",
    "kind": "function",
    "lineno": 372,
    "longname": "Roles.getRolesForUser",
    "memberof": "Roles",
    "name": "getRolesForUser",
    "params": [
      {
        "description": "<p>User Id or actual user object</p>",
        "name": "user",
        "type": {
          "names": [
            "String",
            "Object"
          ]
        }
      },
      {
        "description": "<p>Optional name of group to restrict roles to.\n                        User's Roles.GLOBAL_GROUP will also be included.</p>",
        "name": "group",
        "optional": true,
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "returns": [
      {
        "description": "<p>Array of user's roles, unsorted.</p>",
        "type": {
          "names": [
            "Array"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Retrieve users roles"
  },
  "Roles.getUsersInRole": {
    "filepath": "https://github.com/clinical-meteor//packages/clinical-roles/lib/roles_common.js",
    "kind": "function",
    "lineno": 426,
    "longname": "Roles.getUsersInRole",
    "memberof": "Roles",
    "name": "getUsersInRole",
    "params": [
      {
        "description": "<p>Name of role/permission.  If array, users\n                           returned will have at least one of the roles\n                           specified but need not have <em>all</em> roles.</p>",
        "name": "role",
        "type": {
          "names": [
            "Array",
            "String"
          ]
        }
      },
      {
        "description": "<p>Optional name of group to restrict roles to.\n                        User's Roles.GLOBAL_GROUP will also be checked.</p>",
        "name": "group",
        "optional": true,
        "type": {
          "names": [
            "String"
          ]
        }
      },
      {
        "description": "<p>Optional options which are passed directly\n                          through to <code>Meteor.users.find(query, options)</code></p>",
        "name": "options",
        "optional": true,
        "type": {
          "names": [
            "Object"
          ]
        }
      }
    ],
    "returns": [
      {
        "description": "<p>cursor of users in role</p>",
        "type": {
          "names": [
            "Cursor"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Retrieve all users who are in target role.\n\nNOTE: This is an expensive query; it performs a full collection scan\non the users collection since there is no index set on the 'roles' field.\nThis is by design as most queries will specify an _id so the _id index is\nused automatically."
  },
  "Roles.removeUsersFromRoles": {
    "examples": [
      "Roles.removeUsersFromRoles(users.bob, 'admin')\n    Roles.removeUsersFromRoles([users.bob, users.joe], ['editor'])\n    Roles.removeUsersFromRoles([users.bob, users.joe], ['editor', 'user'])\n    Roles.removeUsersFromRoles(users.eve, ['user'], 'group1')"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-roles/lib/roles_common.js",
    "kind": "function",
    "lineno": 181,
    "longname": "Roles.removeUsersFromRoles",
    "memberof": "Roles",
    "name": "removeUsersFromRoles",
    "params": [
      {
        "description": "<p>User id(s) or object(s) with an _id field</p>",
        "name": "users",
        "type": {
          "names": [
            "Array",
            "String"
          ]
        }
      },
      {
        "description": "<p>Name(s) of roles to add users to</p>",
        "name": "roles",
        "type": {
          "names": [
            "Array",
            "String"
          ]
        }
      },
      {
        "description": "<p>Optional. Group name. If supplied, only that\n                        group will have roles removed.</p>",
        "name": "group",
        "optional": true,
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Remove users from roles"
  },
  "Roles.setUserRoles": {
    "examples": [
      "Roles.setUserRoles(userId, 'admin')\n    Roles.setUserRoles(userId, ['view-secrets'], 'example.com')\n    Roles.setUserRoles([user1, user2], ['user','editor'])\n    Roles.setUserRoles([user1, user2], ['glorious-admin', 'perform-action'], 'example.org')\n    Roles.setUserRoles(userId, 'admin', Roles.GLOBAL_GROUP)"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-roles/lib/roles_common.js",
    "kind": "function",
    "lineno": 151,
    "longname": "Roles.setUserRoles",
    "memberof": "Roles",
    "name": "setUserRoles",
    "params": [
      {
        "description": "<p>User id(s) or object(s) with an _id field</p>",
        "name": "users",
        "type": {
          "names": [
            "Array",
            "String"
          ]
        }
      },
      {
        "description": "<p>Name(s) of roles/permissions to add users to</p>",
        "name": "roles",
        "type": {
          "names": [
            "Array",
            "String"
          ]
        }
      },
      {
        "description": "<p>Optional group name. If supplied, roles will be\n                        specific to that group.\n                        Group names can not start with '$'.\n                        Periods in names '.' are automatically converted\n                        to underscores.\n                        The special group Roles.GLOBAL_GROUP provides\n                        a convenient way to assign blanket roles/permissions\n                        across all groups.  The roles/permissions in the\n                        Roles.GLOBAL_GROUP group will be automatically\n                        included in checks for any group.</p>",
        "name": "group",
        "optional": true,
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Set a users roles/permissions."
  },
  "Roles.userIsInRole": {
    "examples": [
      "// non-group usage\n    Roles.userIsInRole(user, 'admin')\n    Roles.userIsInRole(user, ['admin','editor'])\n    Roles.userIsInRole(userId, 'admin')\n    Roles.userIsInRole(userId, ['admin','editor'])\n\n    // per-group usage\n    Roles.userIsInRole(user,   ['admin','editor'], 'group1')\n    Roles.userIsInRole(userId, ['admin','editor'], 'group1')\n    Roles.userIsInRole(userId, ['admin','editor'], Roles.GLOBAL_GROUP)\n\n    // this format can also be used as short-hand for Roles.GLOBAL_GROUP\n    Roles.userIsInRole(user, 'admin')"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-roles/lib/roles_common.js",
    "kind": "function",
    "lineno": 259,
    "longname": "Roles.userIsInRole",
    "memberof": "Roles",
    "name": "userIsInRole",
    "params": [
      {
        "description": "<p>User Id or actual user object</p>",
        "name": "user",
        "type": {
          "names": [
            "String",
            "Object"
          ]
        }
      },
      {
        "description": "<p>Name of role/permission or Array of\n                           roles/permissions to check against.  If array,\n                           will return true if user is in <em>any</em> role.</p>",
        "name": "roles",
        "type": {
          "names": [
            "String",
            "Array"
          ]
        }
      },
      {
        "description": "<p>Optional. Name of group.  If supplied, limits check\n                        to just that group.\n                        The user's Roles.GLOBAL_GROUP will always be checked\n                        whether group is specified or not.</p>",
        "name": "group",
        "optional": true,
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "returns": [
      {
        "description": "<p>true if user is in <em>any</em> of the target roles</p>",
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Check if user has specified permissions/roles"
  },
  "SchemaHydrator.dehydrate": {
    "filepath": "https://github.com/clinical-meteor//packages/clinical-schema-hydrator/lib/SchemaHydrator.js",
    "kind": "member",
    "lineno": 124,
    "locus": "Anywhere",
    "longname": "SchemaHydrator.dehydrate",
    "memberof": "SchemaHydrator",
    "name": "dehydrate",
    "returns": [
      {
        "type": {
          "names": [
            "JSON"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Converts a SimpleSchema object into a JSON object which can be stored in Mongo.  Loses any functions or methods associated with the Schema.",
    "version": "1.2.3"
  },
  "SchemaHydrator.hydrate": {
    "examples": [
      "```js\nvar Foo = new Collection('foo');\nFoo.attachSchema(SchemaHydrator.hydrate(Metadata.findOne({name: \"AcmeWidgetSchema\"})))\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-schema-hydrator/lib/SchemaHydrator.js",
    "kind": "member",
    "lineno": 2,
    "locus": "Anywhere",
    "longname": "SchemaHydrator.hydrate",
    "memberof": "SchemaHydrator",
    "name": "hydrate",
    "returns": [
      {
        "type": {
          "names": [
            "SimpleSchema"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Converts a JSON object into a SimpleSchema object.",
    "version": "1.2.3"
  },
  "SchemaHydrator.hydratePartialSchema": {
    "filepath": "https://github.com/clinical-meteor//packages/clinical-schema-hydrator/lib/SchemaHydrator.js",
    "kind": "member",
    "lineno": 74,
    "locus": "Anywhere",
    "longname": "SchemaHydrator.hydratePartialSchema",
    "memberof": "SchemaHydrator",
    "name": "hydratePartialSchema",
    "returns": [
      {
        "type": {
          "names": [
            "JSON"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Converts a JSON object representing a schena object into a proper SimpleSchema.  Used in the FormBuilder API.",
    "version": "1.2.3"
  },
  "SchemaHydrator.isTrue": {
    "filepath": "https://github.com/clinical-meteor//packages/clinical-schema-hydrator/lib/SchemaHydrator.js",
    "kind": "member",
    "lineno": 152,
    "locus": "Anywhere",
    "longname": "SchemaHydrator.isTrue",
    "memberof": "SchemaHydrator",
    "name": "isTrue",
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Verifies the object is loaded.",
    "version": "1.2.3"
  },
  "Session.clear": {
    "examples": [
      "```js\n  Session.clear('activePatient');\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-extended-api/client/session-extended-api.js",
    "kind": "member",
    "lineno": 26,
    "locus": "Client",
    "longname": "Session.clear",
    "memberof": "Session",
    "name": "clear",
    "scope": "static",
    "summary": "Clears a session variable.",
    "version": "1.2.3"
  },
  "Session.toggle": {
    "examples": [
      "```js\n  Session.toggle('isSidebarVisible');\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-extended-api/client/session-extended-api.js",
    "kind": "member",
    "lineno": 1,
    "locus": "Client",
    "longname": "Session.toggle",
    "memberof": "Session",
    "name": "toggle",
    "scope": "static",
    "summary": "Toggles a boolean session variable true/false.",
    "version": "1.2.3"
  },
  "String.addUnderscores": {
    "examples": [
      "```js\nvar foo = \"Quick brown fox\".addUnderscores();\n})\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-extended-api/lib/String.extensions.js",
    "kind": "member",
    "lineno": 1,
    "locus": "Anywhere",
    "longname": "String.addUnderscores",
    "memberof": "String",
    "name": "addUnderscores",
    "scope": "static",
    "summary": "Replaces spaces in a string with underscores.",
    "version": "1.2.3"
  },
  "Style.parse": {
    "examples": [
      "Template.foo.helpers({\n  getPageWidth: function(){\n    return Style.parse({\n      \"width\": \"80%\",\n      \"padding-left\": \"80%\",\n      \"padding-right\": \"80%\"\n    });\n  }\n});"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-extended-api/lib/Style.js",
    "kind": "member",
    "lineno": 4,
    "locus": "Anywhere",
    "longname": "Style.parse",
    "memberof": "Style",
    "name": "parse",
    "returns": [
      {
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Serializes a json object into a text string."
  },
  "Theme.configure": {
    "examples": [
      "```js\nTheme.configure({\n  appTitle: \"Nifty Spiffy App\",\n  backgroundColor: \"lightgray\",\n  backgroundUrl: \"\"\n});\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-theming/objects/Theme.js",
    "kind": "member",
    "lineno": 14,
    "longname": "Theme.configure",
    "memberof": "Theme",
    "name": "configure",
    "scope": "static",
    "summary": "Configure the global Theme object for the application.",
    "version": "1.2.3"
  },
  "Theme.getAppTitle": {
    "examples": [
      "```js\nTemplate.appLayout.helpers({\n  getTitleText: function () {\n    return Theme.getAppTitle();\n  }\n});\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-theming/objects/Theme.js",
    "kind": "member",
    "lineno": 32,
    "longname": "Theme.getAppTitle",
    "memberof": "Theme",
    "name": "getAppTitle",
    "scope": "static",
    "summary": "Get the title for the application.",
    "version": "1.2.3"
  },
  "Theme.paintBackgroundColor": {
    "examples": [
      "```js\nTheme.paintBackgroundColor();\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-theming/objects/Theme.js",
    "kind": "member",
    "lineno": 98,
    "longname": "Theme.paintBackgroundColor",
    "memberof": "Theme",
    "name": "paintBackgroundColor",
    "scope": "static",
    "summary": "Triggers a repaint of the body background, using whatever background color value is set in the Theme object.",
    "version": "1.2.3"
  },
  "Theme.setAppTitle": {
    "examples": [
      "```js\nTheme.setAppTitle($('#appTitleInput').val());\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-theming/objects/Theme.js",
    "kind": "member",
    "lineno": 55,
    "longname": "Theme.setAppTitle",
    "memberof": "Theme",
    "name": "setAppTitle",
    "scope": "static",
    "summary": "Set the title for the application.",
    "version": "1.2.3"
  },
  "Theme.setBackgroundColor": {
    "examples": [
      "```js\nTheme.setBackgroundColor('blue');\nTheme.setBackgroundColor('green');\nTheme.setBackgroundColor('maroon');\nTheme.setBackgroundColor('gray');\nTheme.setBackgroundColor('lightgray');\nTheme.setBackgroundColor('gradient');\nTheme.setBackgroundColor('background-color: #808080;');\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-theming/objects/Theme.js",
    "kind": "member",
    "lineno": 76,
    "longname": "Theme.setBackgroundColor",
    "memberof": "Theme",
    "name": "setBackgroundColor",
    "scope": "static",
    "summary": "Set the background color that the app should use.",
    "version": "1.2.3"
  },
  "User": {
    "filepath": "https://github.com/clinical-meteor//packages/clinical-user-model/lib/user-model.js",
    "kind": "class",
    "lineno": 1,
    "longname": "User",
    "name": "User",
    "params": [
      {
        "description": "<p>An object representing a conversation ususally a Mongo document</p>",
        "name": "document",
        "type": {
          "names": [
            "Object"
          ]
        }
      }
    ],
    "scope": "global",
    "summary": "Represents a User"
  },
  "User.defaultEmail": {
    "examples": [
      "```js\nvar selectedUser = Meteor.users.findOne({username: \"janedoe\"});\nconsole.log(selectedUser.defaultEmail());\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-user-model/lib/user-model.js",
    "kind": "member",
    "lineno": 137,
    "longname": "User.defaultEmail",
    "memberof": "User",
    "name": "defaultEmail",
    "returns": [
      {
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Gets the default email that an account is associated.  Defined as the first verified email in the emails array.",
    "version": "1.2.3"
  },
  "User.displayName": {
    "examples": [
      "```js\nvar selectedUser = Meteor.users.findOne({username: \"janedoe\"});\nconsole.log(selectedUser.displayName());\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-user-model/lib/user-model.js",
    "kind": "member",
    "lineno": 19,
    "longname": "User.displayName",
    "memberof": "User",
    "name": "displayName",
    "returns": [
      {
        "description": "<p>A name representation of the user account</p>",
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "The personal name of the user account.",
    "version": "1.2.3"
  },
  "User.familyName": {
    "examples": [
      "```js\nvar selectedUser = Meteor.users.findOne({username: \"janedoe\"});\nconsole.log(selectedUser.familyName());\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-user-model/lib/user-model.js",
    "kind": "member",
    "lineno": 116,
    "longname": "User.familyName",
    "memberof": "User",
    "name": "familyName",
    "returns": [
      {
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Gets the family (last) name of the user.",
    "version": "1.2.3"
  },
  "User.fullName": {
    "examples": [
      "```js\nvar selectedUser = Meteor.users.findOne({username: \"janedoe\"});\nconsole.log(selectedUser.fullName());\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-user-model/lib/user-model.js",
    "kind": "member",
    "lineno": 73,
    "longname": "User.fullName",
    "memberof": "User",
    "name": "fullName",
    "returns": [
      {
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Gets the full name of the user.",
    "version": "1.2.3"
  },
  "User.getAllCollaborations": {
    "examples": [
      "```js\nvar selectedUser = Meteor.users.findOne({username: \"janedoe\"});\nselectedUser.getAllCollaborations().forEach(function(collaborationName){\n  console.log(collaborationNamplae);\n});\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-collaborations/lib/object.user.js",
    "kind": "member",
    "lineno": 125,
    "locus": "Server",
    "longname": "User.getAllCollaborations",
    "memberof": "User",
    "name": "getAllCollaborations",
    "returns": [
      {
        "type": {
          "names": [
            "Array"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Parses the collaborations graph, and returns a list of all collaborations that a user has reciprical access to.  Uses a transitive closure algorithm to walk the collaboration graph.",
    "version": "1.2.3"
  },
  "User.getCollaborations": {
    "examples": [
      "```js\nvar selectedUser = Meteor.users.findOne({username: \"janedoe\"});\nselectedUser.getCollaborations().forEach(function(collaboration){\n  console.log(collaboration.name);\n});\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-collaborations/lib/object.user.js",
    "kind": "member",
    "lineno": 79,
    "longname": "User.getCollaborations",
    "memberof": "User",
    "name": "getCollaborations",
    "returns": [
      {
        "type": {
          "names": [
            "Array"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Gets an array of all the collaborations that a user is associated with.",
    "version": "1.2.3"
  },
  "User.givenName": {
    "examples": [
      "```js\nvar selectedUser = Meteor.users.findOne({username: \"janedoe\"});\nconsole.log(selectedUser.givenName());\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-user-model/lib/user-model.js",
    "kind": "member",
    "lineno": 94,
    "longname": "User.givenName",
    "memberof": "User",
    "name": "givenName",
    "returns": [
      {
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Gets the given (first) name of the user.",
    "version": "1.2.3"
  },
  "User.hasNoCollaborations": {
    "examples": [
      "```js\nvar selectedUser = Meteor.users.findOne({username: \"janedoe\"});\nif(selectedUser.hasNoCollaborations()){\n  Router.go('/path/to/collaboration/signup');\n};\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-collaborations/lib/object.user.js",
    "kind": "member",
    "lineno": 30,
    "longname": "User.hasNoCollaborations",
    "memberof": "User",
    "name": "hasNoCollaborations",
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Whether the person is associated with a collaboration or a new user.",
    "version": "1.2.3"
  },
  "User.isMemberOfAnyCollaboration": {
    "examples": [
      "```js\nvar selectedUser = Meteor.users.findOne({username: \"janedoe\"});\nif(selectedUser.isMemberOfAnyCollaboration()){\n  Hipaa.logEntry('A team collaborator did something that requires logging.')\n} else {\n  Router.go('/path/to/collaboration/signup');\n};\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-collaborations/lib/object.user.js",
    "kind": "member",
    "lineno": 6,
    "longname": "User.isMemberOfAnyCollaboration",
    "memberof": "User",
    "name": "isMemberOfAnyCollaboration",
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Whether the person is associated with a collaboration.  Helps in determining if an account is newly created, a patient, research subject, or member of a clinical collaboration.  An account that is a member of a collaboration will typically have more access, but will have regulatory oversite and auditing (i.e. subject to HIPAA tracking and auditing).",
    "version": "1.2.3"
  },
  "User.isMemberOfCollaboration": {
    "examples": [
      "```js\nvar selectedUser = Meteor.users.findOne({username: \"janedoe\"});\nif(selectedUser.hasNoCollaborations()){\n  Router.go('/path/to/collaboration/signup');\n};\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-collaborations/lib/object.user.js",
    "kind": "member",
    "lineno": 52,
    "longname": "User.isMemberOfCollaboration",
    "memberof": "User",
    "name": "isMemberOfCollaboration",
    "params": [
      {
        "description": "<p>The MongoId of the collaboration.</p>",
        "name": "collaborationId"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Determines if a user is associated with a specific collaboration.",
    "version": "1.2.3"
  },
  "User.isSelf": {
    "filepath": "https://github.com/clinical-meteor//packages/clinical-user-model/lib/user-model.js",
    "kind": "member",
    "lineno": 53,
    "longname": "User.isSelf",
    "memberof": "User",
    "name": "isSelf",
    "returns": [
      {
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Check if the this user is the current logged in user or the specified user.",
    "version": "1.2.3"
  },
  "User.syncCollaborations": {
    "examples": [
      "```js\nvar selectedUser = Meteor.users.findOne({username: \"janedoe\"});\nselectedUser.syncCollaborations();\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-collaborations/lib/object.user.js",
    "kind": "member",
    "lineno": 203,
    "locus": "Anywhere",
    "longname": "User.syncCollaborations",
    "memberof": "User",
    "name": "syncCollaborations",
    "scope": "static",
    "summary": "Makes sure the user account is synchronized with the current User model.  Basically a save() function for collaborations.",
    "version": "1.2.3"
  },
  "User.{{fullName}}": {
    "examples": [
      "```html\n<div>{{fullName}}</div>\n```"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-user-model/client/template.helpers.js",
    "kind": "member",
    "lineno": 1,
    "locus": "Client, Blaze Templates",
    "longname": "User.{{fullName}}",
    "memberof": "User",
    "name": "{{fullName}}",
    "returns": [
      {
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Gets the full name of the user.",
    "version": "1.2.3"
  },
  "module:Roles.GLOBAL_GROUP": {
    "examples": [
      "Roles.addUsersToRoles(user, 'admin', Roles.GLOBAL_GROUP)\n    Roles.userIsInRole(user, 'admin') // => true\n\n    Roles.setUserRoles(user, 'support-staff', Roles.GLOBAL_GROUP)\n    Roles.userIsInRole(user, 'support-staff') // => true\n    Roles.userIsInRole(user, 'admin') // => false"
    ],
    "filepath": "https://github.com/clinical-meteor//packages/clinical-roles/lib/roles_common.js",
    "kind": "member",
    "lineno": 52,
    "longname": "module:Roles.GLOBAL_GROUP",
    "memberof": "module:Roles",
    "name": "GLOBAL_GROUP",
    "properties": [
      {
        "name": "GLOBAL_GROUP"
      }
    ],
    "readonly": true,
    "scope": "static",
    "summary": "Constant used to reference the special 'global' group that\ncan be used to apply blanket permissions across all groups.",
    "type": {
      "names": [
        "String"
      ]
    }
  }
};