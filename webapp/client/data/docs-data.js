// This file is automatically generated by meteor-jsdoc. Regenerate it with 'meteor-jsdoc build'
DocsData = {
  "ActiveLayout.{{getAppTitle}}": {
    "examples": [
      "```html\n<h1>{{getAppTitle}}</h1>\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-active-layout/client/template.helpers.js",
    "kind": "member",
    "lineno": 2,
    "locus": "Client, Blaze Template",
    "longname": "ActiveLayout.{{getAppTitle}}",
    "memberof": "ActiveLayout",
    "name": "{{getAppTitle}}",
    "returns": [
      {
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Get the application title.",
    "version": "1.2.3"
  },
  "ActiveLayout.{{getConnection}}": {
    "examples": [
      "```html\n<div>{{getStatusLabelText}}</div>\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-active-layout/client/template.helpers.js",
    "kind": "member",
    "lineno": 41,
    "link": "The quick brown fox.",
    "locus": "Client, Blaze Template",
    "longname": "ActiveLayout.{{getConnection}}",
    "memberof": "ActiveLayout",
    "name": "{{getConnection}}",
    "returns": [
      {
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Display the connection status of the Meteor app.",
    "version": "1.2.3"
  },
  "ActiveLayout.{{getCreatedAt}}": {
    "examples": [
      "```html\n<div>{{getCreatedAt}}</div>\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-active-layout/client/template.helpers.js",
    "kind": "member",
    "lineno": 154,
    "locus": "Client, Blaze Template",
    "longname": "ActiveLayout.{{getCreatedAt}}",
    "memberof": "ActiveLayout",
    "name": "{{getCreatedAt}}",
    "returns": [
      {
        "type": {
          "names": [
            "DateString"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Gets the timestamp of when the record was created, returned as a text string.",
    "version": "1.2.3"
  },
  "ActiveLayout.{{getNavWidth}}": {
    "examples": [
      "```html\n<nav style=\"{{getNavWidth}}\"></nav>\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-active-layout/client/template.helpers.js",
    "kind": "member",
    "lineno": 20,
    "locus": "Client, Blaze Template",
    "longname": "ActiveLayout.{{getNavWidth}}",
    "memberof": "ActiveLayout",
    "name": "{{getNavWidth}}",
    "returns": [
      {
        "type": {
          "names": [
            "Style"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Get the calculated width of the navbar.",
    "version": "1.2.3"
  },
  "ActiveLayout.{{getStatusLabelColor}}": {
    "examples": [
      "```html\n<div>{{getStatusLabelText}}</div>\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-active-layout/client/template.helpers.js",
    "kind": "member",
    "lineno": 64,
    "locus": "Client, Blaze Template",
    "longname": "ActiveLayout.{{getStatusLabelColor}}",
    "memberof": "ActiveLayout",
    "name": "{{getStatusLabelColor}}",
    "returns": [
      {
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "scope": "static",
    "see": [
      "'foo'"
    ],
    "since": "1.2.3",
    "summary": "Returns a color, based on the connection status of the Meteor app.",
    "todo:": "Upgrade from {String} to {Hex}",
    "version": "1.2.3"
  },
  "ActiveLayout.{{isAdmin}}": {
    "examples": [
      "```html\n{{#if isAdmin}}<div><!-- privat content --></div>{{/if}}\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-active-layout/client/template.helpers.js",
    "kind": "member",
    "lineno": 88,
    "locus": "Client, Blaze Template",
    "longname": "ActiveLayout.{{isAdmin}}",
    "memberof": "ActiveLayout",
    "name": "{{isAdmin}}",
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Checks the Roles package to see if user is an Admin.",
    "version": "1.2.3"
  },
  "ActiveLayout.{{isLoggedIn}}": {
    "examples": [
      "```html\n{{#if isRole 'secretary'}}<div><!-- secretary content --></div>{{/if}}\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-active-layout/client/template.helpers.js",
    "kind": "member",
    "lineno": 170,
    "locus": "Client, Blaze Template",
    "longname": "ActiveLayout.{{isLoggedIn}}",
    "memberof": "ActiveLayout",
    "name": "{{isLoggedIn}}",
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Syntactic sugar for determining if the user is logged in.",
    "version": "1.2.3"
  },
  "ActiveLayout.{{isRole}}": {
    "examples": [
      "```html\n{{#if isRole 'secretary'}}<div><!-- secretary content --></div>{{/if}}\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-active-layout/client/template.helpers.js",
    "kind": "member",
    "lineno": 123,
    "locus": "Client, Blaze Template",
    "longname": "ActiveLayout.{{isRole}}",
    "memberof": "ActiveLayout",
    "name": "{{isRole}}",
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Checks that the user has the specified type of role.",
    "version": "1.2.3"
  },
  "Collaboration.addAdministrator": {
    "examples": [
      "```js\nvar collaboration = Collaborations.findOne({_id: \"ucsc\"});\ncollaboration.addAdministrator('janedoe@test.org');\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-collaborations/lib/object.collaboration.js",
    "kind": "member",
    "lineno": 137,
    "locus": "Anywhere",
    "longname": "Collaboration.addAdministrator",
    "memberof": "Collaboration",
    "name": "addAdministrator",
    "scope": "static",
    "summary": "Adds an administrator to the Collaboration.",
    "version": "1.2.3"
  },
  "Collaboration.addAdministrators": {
    "examples": [
      "```js\nvar collaboration = Collaborations.findOne({_id: \"ucsc\"});\ncollaboration.addAdministrators('janedoe@test.org, johndoe@someplace.org');\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-collaborations/lib/object.collaboration.js",
    "kind": "member",
    "lineno": 153,
    "locus": "Anywhere",
    "longname": "Collaboration.addAdministrators",
    "memberof": "Collaboration",
    "name": "addAdministrators",
    "scope": "static",
    "summary": "Adds an administrator to the Collaboration.",
    "version": "1.2.3"
  },
  "Collaboration.addCollaborator": {
    "examples": [
      "```js\nvar collaboration = Collaborations.findOne({_id: \"ucsc\"});\ncollaboration.addCollaborator('janedoe@test.org');\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-collaborations/lib/object.collaboration.js",
    "kind": "member",
    "lineno": 100,
    "locus": "Anywhere",
    "longname": "Collaboration.addCollaborator",
    "memberof": "Collaboration",
    "name": "addCollaborator",
    "scope": "static",
    "summary": "Adds a collaborator to the Collaboration.",
    "version": "1.2.3"
  },
  "Collaboration.addCollaborators": {
    "examples": [
      "```js\nvar collaboration = Collaborations.findOne({_id: \"ucsc\"});\ncollaboration.addCollaborators('janedoe@test.org, johndoe@someplace.org');\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-collaborations/lib/object.collaboration.js",
    "kind": "member",
    "lineno": 116,
    "locus": "Anywhere",
    "longname": "Collaboration.addCollaborators",
    "memberof": "Collaboration",
    "name": "addCollaborators",
    "scope": "static",
    "summary": "Adds a collaborator to the Collaboration.",
    "version": "1.2.3"
  },
  "Collaboration.getCollaborators": {
    "examples": [
      "```\nvar collaboration = Collaborations.findOne({_id: \"ucsc\"});\ncollaboration.getNames('janedoe@test.org')\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-collaborations/lib/object.collaboration.js",
    "kind": "function",
    "lineno": 402,
    "locus": "Anywhere",
    "longname": "Collaboration.getCollaborators",
    "memberof": "Collaboration",
    "name": "getCollaborators",
    "params": [],
    "scope": "static",
    "since": "clinical:METEOR@1.1.3",
    "summary": "Return the collaborators attached to the current Collaboration as an array."
  },
  "Collaboration.getNames": {
    "deprecated": true,
    "examples": [
      "```js\nvar collaboration = Collaborations.findOne({_id: \"ucsc\"});\ncollaboration.getNames('janedoe@test.org')\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-collaborations/lib/object.collaboration.js",
    "kind": "member",
    "lineno": 242,
    "locus": "Client",
    "longname": "Collaboration.getNames",
    "memberof": "Collaboration",
    "name": "getNames",
    "scope": "static",
    "summary": "Gets the names of all the",
    "version": "1.2.3"
  },
  "Collaboration.getSelected": {
    "examples": [
      "```js\nvar collaboration = Collaborations.findOne({_id: \"ucsc\"});\ncollaboration.getSelected()\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-collaborations/lib/object.collaboration.js",
    "kind": "member",
    "lineno": 38,
    "locus": "Anywhere",
    "longname": "Collaboration.getSelected",
    "memberof": "Collaboration",
    "name": "getSelected",
    "scope": "static",
    "summary": "Scans the DOM and picks up selected values.",
    "version": "1.2.3"
  },
  "Collaboration.getUrl": {
    "deprecated": true,
    "examples": [
      "```js\nvar collaboration = Collaborations.findOne({_id: \"ucsc\"});\ncollaboration.getUrl(collaborationName)\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-collaborations/lib/object.collaboration.js",
    "kind": "member",
    "lineno": 62,
    "locus": "Anywhere",
    "longname": "Collaboration.getUrl",
    "memberof": "Collaboration",
    "name": "getUrl",
    "scope": "static",
    "summary": "Returns a relative url where a user can get details of the collaboration.",
    "version": "1.2.3"
  },
  "Collaboration.hasApplied": {
    "examples": [
      "```js\nvar collaboration = Collaborations.findOne({_id: \"ucsc\"});\nif (collaboration.hasApplied('janedoe@test.org')){\n  // do stuff\n}\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-collaborations/lib/object.collaboration.js",
    "kind": "member",
    "lineno": 215,
    "locus": "Anywhere",
    "longname": "Collaboration.hasApplied",
    "memberof": "Collaboration",
    "name": "hasApplied",
    "scope": "static",
    "summary": "Determines if user has applied to the Collaboration and is waiting in the requests queue.",
    "version": "1.2.3"
  },
  "Collaboration.hasMember": {
    "examples": [
      "```js\nvar collaboration = Collaborations.findOne({_id: \"ucsc\"});\nif (collaboration.hasMember('janedoe@test.org')){\n  // do stuff\n}\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-collaborations/lib/object.collaboration.js",
    "kind": "member",
    "lineno": 189,
    "locus": "Anywhere",
    "longname": "Collaboration.hasMember",
    "memberof": "Collaboration",
    "name": "hasMember",
    "scope": "static",
    "summary": "Checks if a Collaboration has a particular email address as a collaborator or administrator.",
    "version": "1.2.3"
  },
  "Collaboration.parse": {
    "examples": [
      "```js\nvar collaboration = Collaborations.findOne({_id: \"ucsc\"});\ncollaboration.parse()\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-collaborations/lib/object.collaboration.js",
    "kind": "member",
    "lineno": 17,
    "locus": "Anywhere",
    "longname": "Collaboration.parse",
    "memberof": "Collaboration",
    "name": "parse",
    "scope": "static",
    "summary": "Creates a new collaboration.",
    "version": "1.2.3"
  },
  "Collaboration.removeAdministrator": {
    "examples": [
      "```js\nvar collaboration = Collaborations.findOne({_id: \"ucsc\"});\ncollaboration.removeAdministrator('janedoe@test.org');\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-collaborations/lib/object.collaboration.js",
    "kind": "member",
    "lineno": 173,
    "locus": "Anywhere",
    "longname": "Collaboration.removeAdministrator",
    "memberof": "Collaboration",
    "name": "removeAdministrator",
    "scope": "static",
    "summary": "Removes an administrator from the Collaboration.",
    "version": "1.2.3"
  },
  "Collaboration.removeCollaborator": {
    "examples": [
      "```js\nvar collaboration = Collaborations.findOne({_id: \"ucsc\"});\ncollaboration.removeCollaborator('janedoe@test.org');\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-collaborations/lib/object.collaboration.js",
    "kind": "member",
    "lineno": 83,
    "locus": "Anywhere",
    "longname": "Collaboration.removeCollaborator",
    "memberof": "Collaboration",
    "name": "removeCollaborator",
    "scope": "static",
    "summary": "Removes the specified collaborator from the Collaboration.",
    "version": "1.2.3"
  },
  "Collaborations.Collaborations": {
    "examples": [
      "```js\nCollaborations = new Meteor.Collection(\"collaborations\");\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-collaborations/lib/collection.collaborations.js",
    "kind": "class",
    "lineno": 15,
    "locus": "Anywhere",
    "longname": "Collaborations.Collaborations",
    "memberof": "Collaborations",
    "name": "Collaborations",
    "params": [],
    "scope": "static",
    "summary": "Collaborations object defines a Cursor of collaboration records.",
    "version": "1.2.3"
  },
  "Collaborations.create": {
    "examples": [
      "```js\nCollaborations.create({\n      name: \"SampleCollab\",\n      description: \"Lorem ipsum...\",\n      isUnlisted: false,\n      requiresAdministratorApproval: false,\n      collaborators: ['janedoe@test.org'],\n      administrators: ['janedoe@test.org'],\n      invitations: [],\n      requests: []\n    })\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-collaborations/lib/collection.collaborations.js",
    "kind": "member",
    "lineno": 118,
    "locus": "Anywhere",
    "longname": "Collaborations.create",
    "memberof": "Collaborations",
    "name": "create",
    "scope": "static",
    "summary": "Creates a new collaboration.",
    "version": "1.2.3"
  },
  "Entry.{{logoIsDisplayed}}": {
    "examples": [
      "```html\n{{#if logoIsDisplayed}}\n   <div class=\"entryLogo\" style=\"background-image: url('{{logoUrl}}')\"></div>\n{{/if}}\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-active-entry/components/entryPages.js",
    "kind": "member",
    "lineno": 2,
    "locus": "Client",
    "longname": "Entry.{{logoIsDisplayed}}",
    "memberof": "Entry",
    "name": "{{logoIsDisplayed}}",
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Determines if a block of code should be displayed based on whether the logo is set to be displayed.",
    "version": "1.2.3"
  },
  "Entry.{{logoUrl}}": {
    "examples": [
      "```html\n{{#if logoIsDisplayed}}\n   <div class=\"entryLogo\" style=\"background-image: url('{{logoUrl}}')\"></div>\n{{/if}}\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-active-entry/components/entryPages.js",
    "kind": "member",
    "lineno": 26,
    "locus": "Client",
    "longname": "Entry.{{logoUrl}}",
    "memberof": "Entry",
    "name": "{{logoUrl}}",
    "returns": [
      {
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Retruns the Url of the logo asset.",
    "version": "1.2.3"
  },
  "Env.allow": {
    "examples": [
      "```js\nEnv.allow({\n  DEBUG: true,\n  NODE_ENV: true\n}});\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-env/lib/clinical-env-server.js",
    "kind": "member",
    "lineno": 74,
    "locus": "Server",
    "longname": "Env.allow",
    "memberof": "Env",
    "name": "allow",
    "scope": "static",
    "summary": "Exposes server environment variables on the client.",
    "version": "1.2.3"
  },
  "Env.variable": {
    "examples": [
      "```js\nif(Env.variable('DEBUG')){\n  console.log('debug message');\n}\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-env/lib/clinical-env-client.js",
    "kind": "member",
    "lineno": 11,
    "locus": "Client",
    "longname": "Env.variable",
    "memberof": "Env",
    "name": "variable",
    "scope": "static",
    "summary": "Detects if a specific environment variable was exposed from the server.",
    "version": "1.2.3"
  },
  "FormBuilder.add": {
    "deprecated": true,
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-form-builder/lib/FormBuilder.js",
    "kind": "member",
    "lineno": 2,
    "locus": "Client",
    "longname": "FormBuilder.add",
    "memberof": "FormBuilder",
    "name": "add",
    "params": [
      {
        "name": "blockType"
      },
      {
        "name": "question"
      }
    ],
    "scope": "static",
    "summary": "Adds a section block to a form schema currently being built."
  },
  "FormBuilder.addQuestion": {
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-form-builder/lib/FormBuilder.js",
    "kind": "member",
    "lineno": 17,
    "locus": "Client",
    "longname": "FormBuilder.addQuestion",
    "memberof": "FormBuilder",
    "name": "addQuestion",
    "params": [
      {
        "name": "question"
      }
    ],
    "scope": "static",
    "summary": "Adds a section block to a form schema currently being built."
  },
  "FormBuilder.save": {
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-form-builder/lib/FormBuilder.js",
    "kind": "member",
    "lineno": 200,
    "locus": "Client",
    "longname": "FormBuilder.save",
    "memberof": "FormBuilder",
    "name": "save",
    "params": [
      {
        "name": "question"
      }
    ],
    "scope": "static",
    "summary": "Save a form to the metadata collection."
  },
  "HipaaLogger.logEvent": {
    "examples": [
      "```js\nvar hipaaEvent = {\n  eventType: \"modified\",\n  userId: Meteor.userId(),\n  userName: Meteor.user().profile.fullName,\n  collectionName: \"Medications\",\n  recordId: Random.id(),\n  patientId: Session.get('currentPatientId'),\n  patientName: Session.get('currentPatientName')\n};\nHipaaLogger.logEvent(hipaaEvent);\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-hipaa-audit-log/lib/HipaaLogger.js",
    "kind": "member",
    "lineno": 17,
    "locus": "Client",
    "longname": "HipaaLogger.logEvent",
    "memberof": "HipaaLogger",
    "name": "logEvent",
    "params": [
      {
        "name": "hipaaEvent.eventType"
      },
      {
        "name": "hipaaEvent.userId"
      },
      {
        "name": "hipaaEvent.userName"
      },
      {
        "name": "hipaaEvent.collectionName"
      },
      {
        "name": "hipaaEvent.recordId"
      },
      {
        "name": "hipaaEvent.patientId"
      },
      {
        "name": "hipaaEvent.patientName"
      },
      {
        "name": "hipaaEvent.message"
      }
    ],
    "scope": "static",
    "summary": "Detects if a specific environment variable was exposed from the server.",
    "version": "1.2.3"
  },
  "Mongo.Collection.drop": {
    "examples": [
      "```js\n  todos = new Mongo('todos');\n  todo.insert({name: \"Butter\"})\n  todo.insert({name: \"Eggs\"})\n  todo.insert({name: \"Kale\"})\n  todos.drop();\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-extended-api/server/collection-extended-api.js",
    "kind": "member",
    "lineno": 1,
    "locus": "Server",
    "longname": "Mongo.Collection.drop",
    "memberof": "Mongo.Collection",
    "name": "drop",
    "scope": "static",
    "summary": "Toggles a boolean session variable true/false.",
    "version": "1.2.3"
  },
  "Router.go": {
    "examples": [
      "```js\nRouter.go('/path/to/page'});\nRouter.go('itemsShowRoute', {_id: 5}, {hash: 'frag', query: 'string});\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-router/lib/router_client.js",
    "kind": "member",
    "lineno": 227,
    "locus": "Client",
    "longname": "Router.go",
    "memberof": "Router",
    "name": "go",
    "scope": "static",
    "summary": "Instructs the client browswer to route to a new Url page.",
    "version": "1.2.3"
  },
  "Router.route": {
    "examples": [
      "```js\nRouter.route('/landing/page', {\n  name: \"landingPageRoute\",\n  template: \"marketingPage\"\n}});\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-router/lib/router.js",
    "kind": "member",
    "lineno": 95,
    "locus": "Client",
    "longname": "Router.route",
    "memberof": "Router",
    "name": "route",
    "scope": "static",
    "summary": "Instructs the client browswer to route to a new Url page.",
    "version": "1.2.3"
  },
  "SchemaHydrator.dehydrate": {
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-schema-hydrator/lib/SchemaHydrator.js",
    "kind": "member",
    "lineno": 125,
    "locus": "Anywhere",
    "longname": "SchemaHydrator.dehydrate",
    "memberof": "SchemaHydrator",
    "name": "dehydrate",
    "returns": [
      {
        "type": {
          "names": [
            "JSON"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Converts a SimpleSchema object into a JSON object which can be stored in Mongo.  Loses any functions or methods associated with the Schema.",
    "version": "1.2.3"
  },
  "SchemaHydrator.hydrate": {
    "examples": [
      "```js\nvar Foo = new Collection('foo');\nFoo.attachSchema(SchemaHydrator.hydrate(Metadata.findOne({name: \"AcmeWidgetSchema\"})))\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-schema-hydrator/lib/SchemaHydrator.js",
    "kind": "member",
    "lineno": 2,
    "locus": "Anywhere",
    "longname": "SchemaHydrator.hydrate",
    "memberof": "SchemaHydrator",
    "name": "hydrate",
    "returns": [
      {
        "type": {
          "names": [
            "SimpleSchema"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Converts a JSON object into a SimpleSchema object.",
    "version": "1.2.3"
  },
  "SchemaHydrator.hydratePartialSchema": {
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-schema-hydrator/lib/SchemaHydrator.js",
    "kind": "member",
    "lineno": 75,
    "locus": "Anywhere",
    "longname": "SchemaHydrator.hydratePartialSchema",
    "memberof": "SchemaHydrator",
    "name": "hydratePartialSchema",
    "returns": [
      {
        "type": {
          "names": [
            "JSON"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Converts a JSON object representing a schena object into a proper SimpleSchema.  Used in the FormBuilder API.",
    "version": "1.2.3"
  },
  "Session.clear": {
    "examples": [
      "```js\n  Session.clear('activePatient');\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-extended-api/client/session-extended-api.js",
    "kind": "member",
    "lineno": 26,
    "locus": "Client",
    "longname": "Session.clear",
    "memberof": "Session",
    "name": "clear",
    "scope": "static",
    "summary": "Clears a session variable.",
    "version": "1.2.3"
  },
  "Session.toggle": {
    "examples": [
      "```js\n  Session.toggle('isSidebarVisible');\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-extended-api/client/session-extended-api.js",
    "kind": "member",
    "lineno": 1,
    "locus": "Client",
    "longname": "Session.toggle",
    "memberof": "Session",
    "name": "toggle",
    "scope": "static",
    "summary": "Toggles a boolean session variable true/false.",
    "version": "1.2.3"
  },
  "String.addUnderscores": {
    "examples": [
      "```js\nvar foo = \"Quick brown fox\".addUnderscores();\n})\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-extended-api/lib/String.extensions.js",
    "kind": "member",
    "lineno": 1,
    "locus": "Anywhere",
    "longname": "String.addUnderscores",
    "memberof": "String",
    "name": "addUnderscores",
    "scope": "static",
    "summary": "Replaces spaces in a string with underscores.",
    "version": "1.2.3"
  },
  "Style.parse": {
    "examples": [
      "Template.foo.helpers({\n  getPageWidth: function(){\n    return Style.parse({\n      \"width\": \"80%\",\n      \"padding-left\": \"80%\",\n      \"padding-right\": \"80%\"\n    });\n  }\n});"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-extended-api/lib/Style.js",
    "kind": "member",
    "lineno": 4,
    "locus": "Anywhere",
    "longname": "Style.parse",
    "memberof": "Style",
    "name": "parse",
    "returns": [
      {
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Serializes a json object into a text string."
  },
  "User": {
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-user-model/lib/user-model.js",
    "kind": "class",
    "lineno": 1,
    "longname": "User",
    "name": "User",
    "params": [
      {
        "description": "<p>An object representing a conversation ususally a Mongo document</p>",
        "name": "document",
        "type": {
          "names": [
            "Object"
          ]
        }
      }
    ],
    "scope": "global",
    "summary": "Represents a User"
  },
  "User./testGetCollaborations": {
    "examples": [
      "```js\nMeteor.call('testGetCollaborations');\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-user-model/lib/user-model.js",
    "kind": "member",
    "lineno": 244,
    "locus": "Server",
    "longname": "User./testGetCollaborations",
    "memberof": "User",
    "name": "/testGetCollaborations",
    "returns": [
      {
        "type": {
          "names": [
            "Array"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Write all the User collaborations to the server console log.",
    "version": "1.2.3"
  },
  "User.defaultEmail": {
    "examples": [
      "```js\nvar selectedUser = Meteor.users.findOne({username: \"janedoe\"});\nconsole.log(selectedUser.defaultEmail());\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-user-model/lib/user-model.js",
    "kind": "member",
    "lineno": 189,
    "longname": "User.defaultEmail",
    "memberof": "User",
    "name": "defaultEmail",
    "returns": [
      {
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Gets the default email that an account is associated.  Defined as the first verified email in the emails array.",
    "version": "1.2.3"
  },
  "User.displayName": {
    "examples": [
      "```js\nvar selectedUser = Meteor.users.findOne({username: \"janedoe\"});\nconsole.log(selectedUser.displayName());\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-user-model/lib/user-model.js",
    "kind": "member",
    "lineno": 16,
    "longname": "User.displayName",
    "memberof": "User",
    "name": "displayName",
    "returns": [
      {
        "description": "<p>A name representation of the user account</p>",
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "The personal name of the user account.",
    "version": "1.2.3"
  },
  "User.getAllCollaborations": {
    "examples": [
      "```js\nvar selectedUser = Meteor.users.findOne({username: \"janedoe\"});\nselectedUser.getAllCollaborations().forEach(function(collaborationName){\n  console.log(collaborationName);\n});\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-user-model/lib/user-model.js",
    "kind": "member",
    "lineno": 271,
    "locus": "Server",
    "longname": "User.getAllCollaborations",
    "memberof": "User",
    "name": "getAllCollaborations",
    "returns": [
      {
        "type": {
          "names": [
            "Array"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Parses the collaborations graph, and returns a list of all collaborations that a user has reciprical access to.  Uses a transitive closure algorithm to walk the collaboration graph.",
    "version": "1.2.3"
  },
  "User.getCollaborations": {
    "examples": [
      "```js\nvar selectedUser = Meteor.users.findOne({username: \"janedoe\"});\nselectedUser.getCollaborations().forEach(function(collaboration){\n  console.log(collaboration.name);\n});\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-user-model/lib/user-model.js",
    "kind": "member",
    "lineno": 132,
    "longname": "User.getCollaborations",
    "memberof": "User",
    "name": "getCollaborations",
    "returns": [
      {
        "type": {
          "names": [
            "Array"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Gets an array of all the collaborations that a user is associated with.",
    "version": "1.2.3"
  },
  "User.hasNoCollaborations": {
    "examples": [
      "```js\nvar selectedUser = Meteor.users.findOne({username: \"janedoe\"});\nif(selectedUser.hasNoCollaborations()){\n  Router.go('/path/to/collaboration/signup');\n};\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-user-model/lib/user-model.js",
    "kind": "member",
    "lineno": 83,
    "longname": "User.hasNoCollaborations",
    "memberof": "User",
    "name": "hasNoCollaborations",
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Whether the person is associated with a collaboration or a new user.",
    "version": "1.2.3"
  },
  "User.isMemberOfAnyCollaboration": {
    "examples": [
      "```js\nvar selectedUser = Meteor.users.findOne({username: \"janedoe\"});\nif(selectedUser.isMemberOfAnyCollaboration()){\n  Hipaa.logEntry('A team collaborator did something that requires logging.')\n} else {\n  Router.go('/path/to/collaboration/signup');\n};\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-user-model/lib/user-model.js",
    "kind": "member",
    "lineno": 59,
    "longname": "User.isMemberOfAnyCollaboration",
    "memberof": "User",
    "name": "isMemberOfAnyCollaboration",
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Whether the person is associated with a collaboration.  Helps in determining if an account is newly created, a patient, research subject, or member of a clinical collaboration.  An account that is a member of a collaboration will typically have more access, but will have regulatory oversite and auditing (i.e. subject to HIPAA tracking and auditing).",
    "version": "1.2.3"
  },
  "User.isMemberOfCollaboration": {
    "examples": [
      "```js\nvar selectedUser = Meteor.users.findOne({username: \"janedoe\"});\nif(selectedUser.hasNoCollaborations()){\n  Router.go('/path/to/collaboration/signup');\n};\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-user-model/lib/user-model.js",
    "kind": "member",
    "lineno": 105,
    "longname": "User.isMemberOfCollaboration",
    "memberof": "User",
    "name": "isMemberOfCollaboration",
    "params": [
      {
        "description": "<p>The MongoId of the collaboration.</p>",
        "name": "collaborationId"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "scope": "static",
    "summary": "Determines if a user is associated with a specific collaboration.",
    "version": "1.2.3"
  },
  "User.syncCollaborations": {
    "examples": [
      "```js\nvar selectedUser = Meteor.users.findOne({username: \"janedoe\"});\nselectedUser.syncCollaborations();\n```"
    ],
    "filepath": "https://github.com/username/myproject/tree/master/packages/clinical-user-model/lib/user-model.js",
    "kind": "member",
    "lineno": 324,
    "locus": "Anywhere",
    "longname": "User.syncCollaborations",
    "memberof": "User",
    "name": "syncCollaborations",
    "scope": "static",
    "summary": "Makes sure the user account is synchronized with the current User model.  Basically a save() function for collaborations.",
    "version": "1.2.3"
  }
};